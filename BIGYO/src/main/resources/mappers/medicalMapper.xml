<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.innovest.daos.IDao">

	<!-- select LIST DATA FROM DATABASE -->
	<select id="selectAll_chkDTO" resultType="com.innovest.dtos.CheckUp_DTO">
		SELECT * FROM
		checkup_info LIMIT #{offset}, 10 WHERE chk_ifdeleted = 'N'
	</select>

	<!-- 상세정보 페이지를 위한 쿼리문 : select ONE DATA 1:N TABLE FROM DATABASE START -->
	<resultMap type="com.innovest.dtos.Chk_Hos_Serv_DTO" id="Chk_Hos_Serv_resultMap">
		<result property="chk_rcdno" column="chk_rcdno" />
		<result property="chk_hos_name" column="chk_hos_name" />
		<result property="chk_hos_pnum" column="chk_hos_pnum" />
		<result property="chk_price" column="chk_price" />
		<result property="chk_loc_sido" column="chk_loc_sido" />
		<result property="chk_loc_full" column="chk_loc_full" />
		<result property="chk_loc_lat" column="chk_loc_lat" />
		<result property="chk_loc_lng" column="chk_loc_lng" />
		<result property="chk_target_age" column="chk_target_age" />
		<result property="chk_info_link" column="chk_info_link" />
		<result property="chk_mid_company" column="chk_mid_company" />
		<result property="chk_mid_company_pnum" column="chk_mid_company_pnum" />
		<result property="chk_mid_company_link" column="chk_mid_company_link" />
		<result property="chk_end_date" column="chk_end_date" />
		<collection property="hosList" javaType="java.util.ArrayList"
			column="chk_rcdno" ofType="com.innovest.dtos.Hos_DTO" select="get_hosList" />
		<collection property="servList" javaType="java.util.ArrayList"
			column="chk_rcdno" ofType="com.innovest.dtos.Serv_DTO" select="get_servList" />
	</resultMap>
	<!-- test 시작 -->
	<resultMap type="com.innovest.dtos.Serv_DTO" id="Serv_resultMap">
		<result property="serv_rcdno" column="serv_rcdno" />
		<result property="serv_chk_rcdno" column="serv_chk_rcdno" />
		<result property="serv_pic_link" column="serv_pic_link" />
		<result property="serv_originalpic_name" column="serv_originalpic_name" />
		<result property="serv_storedpic_name" column="serv_storedpic_name" />
		<result property="serv_picsize" column="serv_picsize" />
		<result property="serv_price" column="serv_price" />
		<result property="serv_target_age" column="serv_target_age" />
		<result property="serv_picStoreId" column="serv_picStoreId" />
		<result property="serv_ifdeleted" column="serv_ifdeleted" />
		<result property="serv_create_date" column="serv_create_date" />
		<collection property="servpriceList" javaType="java.util.ArrayList"
			column="serv_rcdno" ofType="com.innovest.dtos.ServPrice_DTO" select="get_servpriceList" />
	</resultMap>

	<resultMap type="com.innovest.dtos.ServPrice_DTO" id="Serv_priceMap">
		<result property="servprice_rcdno" column="servprice_rcdno" />
		<result property="servprice_servinfo_rcdno" column="servprice_servinfo_rcdno" />
		<result property="servprice_price" column="servprice_price" />
		<collection property="servageList" javaType="java.util.ArrayList"
			column="servprice_rcdno" ofType="com.innovest.dtos.ServAge_DTO"
			select="get_servageList" />
	</resultMap>

	<select id="get_servpriceList" resultMap="Serv_priceMap">
		SELECT * FROM
		service_price WHERE servprice_servinfo_rcdno = #{serv_rcdno}
	</select>
	<!-- <collection property="servageList" javaType="java.util.ArrayList" column="serv_rcdno" 
		ofType="com.innovest.dtos.ServAge_DTO" select="get_servageList" /> -->

	<select id="get_servageList" resultType="com.innovest.dtos.ServAge_DTO">
		SELECT * FROM
		service_age WHERE servage_servprice_rcdno = #{servprice_rcdno}
	</select>
	<!-- test 끝 -->
	<!-- 결과값 안에 LIST 가 필요하고 또 안에 필요한 경우 -->
	<!-- <select id="get_servList" resultType="com.innovest.dtos.Serv_DTO"> -->
	<select id="get_servList" resultMap="Serv_resultMap">
		SELECT * FROM service_info
		WHERE
		serv_chk_rcdno =
		#{chk_rcdno} AND serv_ifdeleted = 'N'
	</select>

	<select id="get_hosList" resultType="com.innovest.dtos.Hos_DTO">
		SELECT * FROM hos_info WHERE
		hos_chk_rcdno =
		#{chk_rcdno} AND hos_ifdeleted = 'N'
	</select>
	<!-- 결과값 안에 LIST 가 필요한 경우 -->
	<select id="selectOne_chk_hos_serv" resultMap="Chk_Hos_Serv_resultMap">
		SELECT
		*
		FROM
		checkup_info
		WHERE chk_rcdno = #{chk_rcdno}
	</select>
	<!-- select ONE DATA 1:N TABLE FROM DATABASE END -->

	<!-- eventHospital 페이지를 위한 전체 목록 쿼리문 : select ALL DATA FROM DATABASE START -->
	<select id="selectAll_chk_hos_serv" resultMap="Chk_Hos_Serv_resultMap">
		SELECT * FROM checkup_info WHERE chk_ifdeleted = 'N' LIMIT #{offset},
		10
		<!-- SELECT * FROM checkup_info LIMIT #{offset}, 10 -->
	</select>
	<!-- eventHospital 페이지를 위한 전체 목록 쿼리문 : select ALL DATA FROM DATABASE START -->


	<!-- insert checkup_info Database -->
	<!-- chk_rcdno, chk_hos_name, chk_hos_pnum, chk_price, chk_loc_sido, chk_loc_full, 
		chk_loc_lat, chk_loc_lng, chk_target_age, chk_info_link, chk_mid_company, 
		chk_mid_company_pnum, chk_mid_company_link, chk_end_date -->
	<insert id="insert_chk_hos_serv_DTO_ByObj">
		INSERT INTO checkup_info
		(chk_hos_name,
		chk_hos_pnum,
		chk_price, chk_loc_sido, chk_loc_full, chk_loc_lat,
		chk_loc_lng,
		chk_target_age, chk_info_link, chk_mid_company,
		chk_mid_company_pnum,
		chk_mid_company_link, chk_end_date, chk_ifdeleted)
		VALUES
		(#{chk_hos_name},#{chk_hos_pnum},#{chk_price},#{chk_loc_sido},#{chk_loc_full},
		#{chk_loc_lat},#{chk_loc_lng},#{chk_target_age},#{chk_info_link},#{chk_mid_company},#{chk_mid_company_pnum},
		#{chk_mid_company_link},#{chk_end_date}, #{chk_ifdeleted})
	</insert>
	<!-- checkupinfo 테이블에서 Max rcdno 찾아오기 -->
	<select id="select_rcdno_chkTable" resultType="Integer">
		SELECT
		Max(chk_rcdno)
		FROM
		checkup_info
	</select>

	<!-- insert hos_info Database -->
	<insert id="insert_hos_DTO_ByObj">
		INSERT INTO hos_info
		(hos_rcdno, hos_chk_rcdno,
		hos_pic_link, hos_originalpic_name, hos_storedpic_name, hos_picsize,
		hos_picStoreId, hos_ifdeleted)
		VALUES
		(#{hos_rcdno},#{hos_chk_rcdno},#{hos_pic_link},#{hos_originalpic_name},#{hos_storedpic_name},
		#{hos_picsize},#{hos_picStoreId},#{hos_ifdeleted})
	</insert>

	<!-- insert serv_info Database -->
	<insert id="insert_serv_DTO_ByObj">
		INSERT INTO service_info
		(serv_chk_rcdno,
		serv_pic_link,
		serv_originalpic_name, serv_storedpic_name,
		serv_picsize, serv_price,
		serv_target_age, serv_picStoreId,
		serv_ifdeleted, serv_create_date)
		VALUES
		(#{serv_chk_rcdno},#{serv_pic_link},#{serv_originalpic_name},#{serv_storedpic_name},#{serv_picsize},
		#{serv_price},#{serv_target_age},#{serv_picStoreId},#{serv_ifdeleted},#{serv_create_date})
	</insert>

	<!-- serviceinfo 테이블에서 Max rcdno 찾아오기 -->
	<select id="select_rcdno_servTable" resultType="Integer">
		SELECT
		Max(serv_rcdno)
		FROM
		service_info
	</select>

	<!-- insert serv_price TABLE -->
	<insert id="insert_servPrice_DTO_ByObj">
		INSERT INTO service_price
		(servprice_servinfo_rcdno,
		servprice_price)
		VALUES
		(#{servprice_servinfo_rcdno},#{servprice_price})
	</insert>


	<!-- service_price 테이블에서 Max rcdno 찾아오기 -->
	<select id="select_rcdno_servPriceTable" resultType="Integer">
		SELECT
		Max(servprice_rcdno)
		FROM
		service_price
	</select>
	<!-- insert serv_age TABLE -->
	<insert id="insert_servAge_DTO_ByObj">
		INSERT INTO service_age
		(servage_servprice_rcdno,
		servage_age)
		VALUES
		(#{servage_servprice_rcdno},#{servage_age})
	</insert>

	<update id="update_chk_DTO_ByObj">
		UPDATE checkup_info SET
		chk_hos_name = #{chk_hos_name},
		chk_hos_pnum= #{chk_hos_pnum},
		chk_price= #{chk_price}, chk_loc_sido= #{chk_loc_sido}, chk_loc_full= #{chk_loc_full}, chk_loc_lat= #{chk_loc_lat},
		chk_loc_lng= #{chk_loc_lng},
		chk_target_age= #{chk_target_age}, chk_info_link= #{chk_info_link}, chk_mid_company= #{chk_mid_company},
		chk_mid_company_pnum= #{chk_mid_company_pnum},
		chk_mid_company_link= #{chk_mid_company_link}, chk_end_date= #{chk_end_date}, chk_ifdeleted= #{chk_ifdeleted} WHERE chk_rcdno=#{chk_rcdno}
	</update>

	<update id="deleteByUpdate_hos_DTO">
		UPDATE hos_info SET
		hos_ifdeleted = 'Y'
		WHERE hos_rcdno= #{hos_rcdno}
	</update>
	
	<update id="deleteByUpdate_serv_DTO">
		UPDATE serv_info SET
		serv_ifdeleted = 'Y'
		WHERE serv_rcdno= #{serv_rcdno}
	</update>

</mapper>

